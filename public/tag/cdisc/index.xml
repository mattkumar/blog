<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CDISC | Matthew Kumar</title>
    <link>https://academic-demo.netlify.app/tag/cdisc/</link>
      <atom:link href="https://academic-demo.netlify.app/tag/cdisc/index.xml" rel="self" type="application/rss+xml" />
    <description>CDISC</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Tue, 05 Apr 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://academic-demo.netlify.app/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>CDISC</title>
      <link>https://academic-demo.netlify.app/tag/cdisc/</link>
    </image>
    
    <item>
      <title>Linked TLFs</title>
      <link>https://academic-demo.netlify.app/project/tplyr/</link>
      <pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://academic-demo.netlify.app/project/tplyr/</guid>
      <description>&lt;h2&gt;Overview&lt;/h2&gt;
On March 31, 2022 I had the pleasure of attending the CDISC Open Source Alliance (COSA) Spotlight where  from various CDISC community members shared exciting developments from their work. If you&#39;re interested in the recording, it can be viewed &lt;a href=&#34;https://www.cdisc.org/events/webinar/cdisc-open-source-alliance-spotlight&#34;&gt;here.&lt;/a&gt; 
&lt;br&gt;
&lt;br&gt;
Among presenters were &lt;a href=&#34;https://www.linkedin.com/in/michael-s-stackhouse/&#34;&gt;Mike Stackhouse&lt;/a&gt; and &lt;a href=&#34;https://www.linkedin.com/in/eli-miller-90532a87/&#34;&gt;Eli Miller&lt;/a&gt; from &lt;a href=&#34;https://www.atorusresearch.com/&#34;&gt;Atorus&lt;/a&gt; demonstrating a new feature coming to &lt;code&gt;{Tplyr}&lt;/code&gt;: &lt;b&gt;the ability to to query and retrieve individual observations from a summary table using a metadata-driven approach.&lt;/b&gt;
&lt;br&gt;
&lt;br&gt;
Imagine a generic table. Imagine clicking on a particular cell of that table. Imagine being able to easily identify patients that comprise that cell. Let that sink in for a second as I did. Pretty powerful stuff...
&lt;h2&gt;An Example&lt;/h2&gt;
Excited to give it a try, I spent the weekend coding up this example. It uses a demographics table as an anchor. Once a cell is selected, a variety of TLFs are &lt;b&gt;linked&lt;/b&gt; for the patients in that cell.
&lt;/br&gt;
&lt;/br&gt;
Here is the anchor TLF. I&#39;ve clicked on the overall total cell for patients categorized as being &gt; 80 years of age. There are N = 77 such patients.  
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;anchor&#34; srcset=&#34;
               /project/tplyr/t1_hud0f9c355be00ffbf55516980e7c03402_68375_0c95c0e0468d3f309507d0db1191fe2a.webp 400w,
               /project/tplyr/t1_hud0f9c355be00ffbf55516980e7c03402_68375_5cacf636a8e0ff3b5e2ea314ccc7dbd4.webp 760w,
               /project/tplyr/t1_hud0f9c355be00ffbf55516980e7c03402_68375_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://academic-demo.netlify.app/project/tplyr/t1_hud0f9c355be00ffbf55516980e7c03402_68375_0c95c0e0468d3f309507d0db1191fe2a.webp&#34;
               width=&#34;760&#34;
               height=&#34;576&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Here is the first linked TLF. A simple listing of the N = 77 patients. In Tplyr, you can specify any additional columns you wish to have too.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;listing&#34; srcset=&#34;
               /project/tplyr/t2_hub2aa4f4dd0f50af8aad19c52f1210e24_29694_d84f335c4a6db0c54a46a4bc5efef0d8.webp 400w,
               /project/tplyr/t2_hub2aa4f4dd0f50af8aad19c52f1210e24_29694_7f824f4b050aa6f41cedf060f8a2aa38.webp 760w,
               /project/tplyr/t2_hub2aa4f4dd0f50af8aad19c52f1210e24_29694_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://academic-demo.netlify.app/project/tplyr/t2_hub2aa4f4dd0f50af8aad19c52f1210e24_29694_d84f335c4a6db0c54a46a4bc5efef0d8.webp&#34;
               width=&#34;424&#34;
               height=&#34;638&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;I mentioned figures! Here is a safety figure and an efficacy figure for those N = 77 patients. Each of these figures are also interactive thanks to &lt;code&gt;{highcharter}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;figures&#34; srcset=&#34;
               /project/tplyr/t3_hued9bccd0b40c21f207dcbcb72b66b4a6_61270_923ea559bc1feafdbb493019fd48bdd7.webp 400w,
               /project/tplyr/t3_hued9bccd0b40c21f207dcbcb72b66b4a6_61270_13fb13383987b3630ef29e490962230e.webp 760w,
               /project/tplyr/t3_hued9bccd0b40c21f207dcbcb72b66b4a6_61270_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://academic-demo.netlify.app/project/tplyr/t3_hued9bccd0b40c21f207dcbcb72b66b4a6_61270_923ea559bc1feafdbb493019fd48bdd7.webp&#34;
               width=&#34;760&#34;
               height=&#34;398&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Lastly, here is a TLF from a completely separate section (i.e. safety) for those N = 77 patients. I&amp;rsquo;ve leveraged some of the neat features of &lt;code&gt;{reactable}&lt;/code&gt; to nest things.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;tlf2&#34; srcset=&#34;
               /project/tplyr/t4_hu661b4305fbdc0509785935e60a5a364d_94981_925eb2975b88deec5721e76c49608dd0.webp 400w,
               /project/tplyr/t4_hu661b4305fbdc0509785935e60a5a364d_94981_777df67d149219e193c4b64b479f2e72.webp 760w,
               /project/tplyr/t4_hu661b4305fbdc0509785935e60a5a364d_94981_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://academic-demo.netlify.app/project/tplyr/t4_hu661b4305fbdc0509785935e60a5a364d_94981_925eb2975b88deec5721e76c49608dd0.webp&#34;
               width=&#34;760&#34;
               height=&#34;446&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2&gt;Forward&lt;/h2&gt;
Now take this impulse and multiply it by an entire catalog of TLFs and add to it Shiny&#39;s capabilities - what have you got? 
&lt;/br&gt;
&lt;/br&gt;
A Swiss army knife of productivity capable of serving many functions. Think stat analysts, statisticians, medical writing and more...
&lt;h2&gt;Access&lt;/h2&gt;
You can try the app I created for this example &lt;a href=&#34;https://matt-kumar.shinyapps.io/linked_tlfs/&#34;&gt;here.&lt;/a&gt;
&lt;/br&gt;
&lt;/br&gt;
You can also access the specific build of `{Tplyr}` with these capabilities by going &lt;a href=&#34;https://github.com/atorus-research/Tplyr/tree/gh_issue_32&#34;&gt;here.&lt;/a&gt; 
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;remotes::install_github(&amp;quot;atorus-research/Tplyr@20beb73cd4c202308afbbb57c1f2b6e1590295b7&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&amp;rsquo;ll definitely be keeping an eye on more developments and hope to share more with you here.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Auto-Narratives</title>
      <link>https://academic-demo.netlify.app/project/rmarkdown-reporting-engine/</link>
      <pubDate>Sat, 27 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://academic-demo.netlify.app/project/rmarkdown-reporting-engine/</guid>
      <description>&lt;p&gt;I had recently learned about &lt;a href=&#34;https://drug-dev.com/patient-safety-narratives-clinical-trials-medical-writing-patient-safety-narratives/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;patient safety narratives&lt;/a&gt;, a key deliverable in clinical study reporting that is prepared on a per-patient basis. At the same time, I was also looking to extend my Rmarkdown knowledge to create automated workflows or &amp;ldquo;pipelines&amp;rdquo;. You can see where this is going right?&lt;/p&gt;
&lt;p&gt;My aim was pretty clear: I wanted to create an Rmarkdown-based reporting engine, capable of automatically creating safety narratives for all participants in a clinical trial based on a single template.&lt;/p&gt;
&lt;p&gt;For this example, I borrowed the clinical trial data from the PHUSE Github Repository, openly available &lt;a href=&#34;https://github.com/phuse-org/phuse-scripts/tree/master/data/adam/cdiscpilot01&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next, I got to work in seeing what data elements I would want to pick out for my narratives. I was less concerned with what&amp;rsquo;s actually in a narrative and more interested in the process of automating their creation. Nevertheless, I picked some elements that I think are relevant such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Patient Age/Sex/Race&lt;/li&gt;
&lt;li&gt;Dates of first and last treatment&lt;/li&gt;
&lt;li&gt;Adverse Events, including reported term, severity, outcome and associated dates&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The technical part of this project was interesting to think about and research. I ultimately decided with the following approach:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a template or skeleton structure of a narrative that will be applied to each patients data&lt;/li&gt;
&lt;li&gt;The template includes data wrangling steps that will be repeated for each subject. In here, I also include a table object just to test out variety.&lt;/li&gt;
&lt;li&gt;Using Rmarkdown&amp;rsquo;s &lt;a href=&#34;https://bookdown.org/yihui/rmarkdown/parameterized-reports.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;parameters&lt;/a&gt; (here each subject&amp;rsquo;s unique identifier), loop through the unique identifier list and have the corresponding report created.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This was great and I was able to get it to work almost immediately.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;However&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I wanted extend the current approach by providing a user interface to the engine. This is especially useful for non-programming colleagues (or colleagues not familiar with R or Rmarkdown). Enter Shiny.&lt;/p&gt;
&lt;p&gt;Briefly, the user experience can be described as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A list of patient identifiers are populated in a DataTable, and the user is instructed to select all or some of the patients they wish to generate a report for.&lt;/li&gt;
&lt;li&gt;The user then has the option to select the format of their narratives: .docx, .html, or .pdf&lt;/li&gt;
&lt;li&gt;Once selections are made, from here the process works similar to the above, but within the Shiny server context.&lt;/li&gt;
&lt;li&gt;The last step involves collecting all generated reports, bundling them into a single zip file, and returning them to the user as a download. While this process happens in real time, a progress bar is provided to the user as feedback.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;That last part still amazes me.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve since taken this a few steps further, investigating even more approaches (e.g. parent-child reports) and conditional execution of narrative text based on values of users data and including graphics. I will likely update this repo to include those enhancements, but for now enjoy as is!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
